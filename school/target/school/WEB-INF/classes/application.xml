<?xml version="1.0" encoding="UTF-8"?>  
<beans  
    xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd 
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop.xsd"> 
    
    <!-- 配置需要被Spring管理的Bean（创建，创建后放在了Spring IOC容器里面）-->  
    <!--scope="prototype"每次get一个bean都会重新new一个实例,默认：一个bean里都是同一个实例  -->
    <bean id="p1" class="ioc.People" scope="prototype">  
        <!-- 配置该Bean需要注入的属性（是通过属性set方法来注入的） -->  
        <property name="say"  ref="chinaImpl"/> 
        <property name="name" >
        	<value>梁洋</value>
        </property>
    </bean> 
    <bean id="p2" class="ioc.People"> 
    	<property name="say"  ref="englishImpl"/>
    	<!-- 调用有参构造函数注入赋值，index代表参数下标位置 -->
    	<constructor-arg value="123" index="1"/>
    	<constructor-arg value="accp" index="0"/>
    	<property name="list">
    		<list>
    			<value>梁一</value>
    			<value>李二</value>
    		</list>
    	</property>
    	<property name="map">
    		<map>
    			<entry>
    				<key><value>one</value></key>
    				<value>张三</value>
    			</entry>
    			<entry>
    				<key><value>two</value></key>
    				<value>李四</value>
    			</entry>
    		</map>
    	</property>
    	<property name="set">
    		<set>
    			<value>王五</value>
    			<value>赵六</value>
    		</set>
    	</property>
     </bean> 
    
    <bean id="chinaImpl" class="ioc.ChinaSayImpl"/>
    <bean id="englishImpl" class="ioc.EnglishSayImpl"/>
    	
	<bean id="c1" class="java.util.Calendar" factory-method="getInstance"></bean>
	
	<!-- spring AOP -->
	<!-- 声明被代理的对象（目标对象） -->
	<bean id="chinaSayImpl" class="ioc.ChinaSayImpl"></bean>
	<!-- 声明前置增强 -->
	<!-- <bean id="myBefore" class="proxy.MyBefore"></bean> -->
	<!-- 声明后置增强 -->
	<!-- <bean id="myAfter" class="proxy.MyAfter"></bean> -->
	<!-- 环绕增强 -->
	<!-- <bean id="myAround" class="proxy.MyAround"></bean> -->
	<!-- 声明代理对象 -->
	<bean id="chinaProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
		<!-- 注入目标对象 -->
		<property name="target" ref="chinaSayImpl"/>
		
		
		<!-- 注入代理接口定义-->
		<!-- <property name="proxyInterfaces" value="ioc.Isay"/>
		注入增强
		<property name="interceptorNames"
			<list>
				<value>myAround</value>
				<value>myBefore</value>
				<value>myAfter</value>
			</list> 
		</property>  -->
	</bean>
	
	<bean  id="englishProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target" ref="englishImpl"/>
	</bean>
	
	<bean id="userServiceLogger" class="aop.UserServiceLogger"></bean>
	<aop:config>
		<!-- 定义切入点 -->
		<!-- <aop:pointcut expression="execution(* com.x..*.*(..))" id=""/> -->
		<aop:pointcut  id="pointcut" expression="execution(public void say())"/>
		<!-- 定义切面 -->
		<aop:aspect ref="userServiceLogger">
			<!-- 定义前置增强 -->
			<aop:before method="before" pointcut-ref="pointcut"/>
			<!-- 定义方法返回增强 -->
			<aop:after-returning method="afterReturning" pointcut-ref="pointcut" returning="result"/>
			<!-- 异常抛出增强 -->
			<aop:after-throwing method="afterException" pointcut-ref="pointcut" throwing="e"/>
			<!-- 最终（后置）增强 -->
			<aop:after-throwing method="after" pointcut-ref="pointcut" />
		</aop:aspect>
	</aop:config>
	
	
	
	
	
</beans>  
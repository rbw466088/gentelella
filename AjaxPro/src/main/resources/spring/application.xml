<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd" >

	<!-- 导入外部和service相关的xml文件 -->
	<import resource="applicationYang.xml" />

	<!-- 引入properties文件加密 -->
	<!-- <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> -->
	<bean class="com.gdglc.AjaxPro.utils.DecryptPropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath:jdbc.properties</value>
		</property>
	</bean>
	<!-- 定义数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- 配置SqlSessionFactoryBean工厂函数 -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 引用数据源组件 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 引用MyBatis配置文件中的配置 -->
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
		<!-- 配置需要加载的mapper文件 -->
		<property name="mapperLocations">
			<list>
				<value>classpath:mapper/**/*.xml</value>
			</list>
		</property>
		<!-- 别名 -->
		<property name="typeAliasesPackage" value="com.gdglc.AjaxPro.entity" />
	</bean>

	<!-- 利用工厂函数注入dao层中的所有接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sessionFactory" />
		<property name="basePackage" value="com.gdglc.AjaxPro.dao" />
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 定义事务控制规则 -->
	<tx:advice id="txadvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 先配置只读的 -->
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="show*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>
	<!-- 定义一个事务切面 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.gdglc.AjaxPro.service..*.*(..))"
			id="trPoint" />
		<aop:advisor advice-ref="txadvice" pointcut-ref="trPoint" />
	</aop:config>
</beans>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.easybuy.dao.product.ProductMapper">
	
	<!--增加商品（返回类型：int，参数：Product对象）。  -->
	<insert id="add" parameterType="Product">
		insert into easybuy_product (name,description,price,stock,categoryLevel1Id,
									categoryLevel2Id,categoryLevel3Id,fileName) 
					values (#{name},#{description},#{price},#{stock},#{categoryLevel1Id},
							#{categoryLevel2Id},#{categoryLevel3Id},#{fileName})
	</insert>
	
	<!-- 根据商品id修改商品信息（返回类型：int，参数：Product对象）。 -->
	<update id="update" parameterType="Product">
		 update easybuy_product 
			 <trim prefix="set" suffixOverrides=",">
		 		<if test="name != null">name=#{name},</if>
				<if test="description != null">description=#{description},</if>
				<if test="price != null">price=#{price},</if>
				<if test="stock != null">stock=#{stock},</if>
				<if test="categoryLevel1Id != null">categoryLevel1Id=#{categoryLevel1Id},</if>
				<if test="categoryLevel2Id != null">categoryLevel2Id=#{categoryLevel2Id},</if>
				<if test="categoryLevel3Id != null">categoryLevel3Id=#{categoryLevel3Id},</if>
				<if test="fileName != null">fileName=#{fileName},</if>
			 </trim>
			 where id = #{id}
	</update>
	
	<!-- 根据商品id删除商品信息（返回类型：int，参数：商品id）。 -->
	<delete id="deleteProductById" parameterType="Integer">
		delete from easybuy_product where id=#{id}
	</delete>
	
	<!-- 根据商品id查看商品详情（返回类型：Product，参数：商品id）。 -->
	<select id="getProductById" resultType="Product">
		select * from easybuy_product where id=#{id}
	</select>
	
	
	<!-- 根据查询条件，分页显示商品信息列表（返回类型：List<Product>，参数：忽略条数、显示条数、商品名称、分类菜单ID、分类级别）。 -->
	<select id="getProductList" resultType="product">
		select p.* from easybuy_product p where 1=1
			<if test="proName != null and proName!= ''">
				and p.name like CONCAT ('%',#{proName},'%')	<!-- 商品名称 -->
			</if>
			<if test="level == 1 and categoryId != null">
				and p.categoryLevel1Id=#{categoryId}		<!-- 分类1 -->
			</if>
			<if test="level == 2 and categoryId != null">
				and p.categoryLevel2Id=#{categoryId}		<!-- 分类2 -->
			</if>
			<if test="level == 3 and categoryId != null">
				and p.categoryLevel3Id=#{categoryId}		<!-- 分类3 -->
			</if>
			limit #{from},#{pageSize}
	</select>


	<!-- 根据条件查询商品信息表总记录数（返回类型：int，参数：商品名称、分类级别、类别）。 -->
	<select id="count" resultType="int">
		select count(1) as count from easybuy_product p where 1=1
			<if test="proName != null and proName!= ''">
				and p.name like CONCAT ('%',#{proName},'%')
			</if>
			<if test="level == 1 and categoryId != null">
				and p.categoryLevel1Id=#{categoryId} 
			</if>
			<if test="level == 2 and categoryId != null">
				and p.categoryLevel2Id=#{categoryId}
			</if>
			<if test="level == 3 and categoryId != null">
				and p.categoryLevel3Id=#{categoryId}
			</if>
	</select>
	
	<!-- 更新指定商品库存量（返回类型：int，参数：商品id、库存）。 -->
	<update id="updateStock">
		 update easybuy_product 
			 <trim prefix="set" suffixOverrides=",">
				<if test="stock != null">stock=#{stock}</if>
			 </trim>
			 where id = #{id}
	</update>

</mapper>



